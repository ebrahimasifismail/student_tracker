# Generated by Django 3.2.13 on 2022-06-18 09:23

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('driver', 'Driver'), ('pass', 'Passenger'), ('admin', 'Admin')], max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('registration', models.CharField(blank=True, max_length=150, null=True)),
                ('registration_validity', models.DateTimeField(blank=True, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=150, null=True)),
                ('model', models.CharField(blank=True, max_length=150, null=True)),
                ('year_of_manufacturer', models.IntegerField(blank=True, null=True)),
                ('capacity', models.IntegerField(blank=True, null=True)),
                ('mileage', models.DecimalField(blank=True, decimal_places=3, max_digits=3, null=True)),
                ('insurance', models.CharField(blank=True, max_length=150, null=True)),
                ('insurance_validity', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name_plural': 'buses',
                'ordering': ['registration'],
            },
        ),
        migrations.CreateModel(
            name='ContactPerson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=30, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('phone', models.CharField(blank=True, max_length=30, null=True)),
                ('address_line_one', models.CharField(blank=True, max_length=150, null=True)),
                ('address_line_two', models.CharField(blank=True, max_length=150, null=True)),
                ('designation', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'verbose_name_plural': 'contact_persons',
                'ordering': ['first_name'],
            },
        ),
        migrations.CreateModel(
            name='Coordinates',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.DecimalField(blank=True, decimal_places=6, max_digits=6, null=True)),
                ('long', models.DecimalField(blank=True, decimal_places=6, max_digits=6, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_join', models.DateTimeField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=150, null=True)),
                ('address_line_one', models.CharField(blank=True, max_length=150, null=True)),
                ('address_line_two', models.CharField(blank=True, max_length=150, null=True)),
                ('active', models.BooleanField(blank=True, default=True, null=True)),
                ('emergency_contact', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_module.contactperson')),
            ],
            options={
                'verbose_name_plural': 'buses',
                'ordering': ['user'],
            },
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_point', models.CharField(blank=True, max_length=150, null=True)),
                ('destination', models.CharField(blank=True, max_length=150, null=True)),
                ('destination_coordinates', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='destination_coordinates', to='auth_module.coordinates')),
            ],
            options={
                'verbose_name_plural': 'routes',
            },
        ),
        migrations.CreateModel(
            name='ServiceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_of_service', models.DateTimeField()),
                ('issue', models.CharField(blank=True, max_length=150, null=True)),
                ('description', models.CharField(blank=True, max_length=150, null=True)),
                ('service_cost', models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                'verbose_name_plural': 'service_histories',
                'ordering': ['date_of_service'],
            },
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('status', models.CharField(blank=True, max_length=150, null=True)),
                ('bus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_module.bus')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_module.driver')),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_module.route')),
            ],
            options={
                'verbose_name_plural': 'trips',
            },
        ),
        migrations.CreateModel(
            name='WayPoint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('way_point_name', models.CharField(blank=True, max_length=150, null=True)),
                ('sort_order', models.IntegerField(blank=True, null=True)),
                ('route', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_module.route')),
                ('way_point_coordinates', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_module.coordinates')),
            ],
            options={
                'verbose_name_plural': 'way_points',
                'ordering': ['way_point_name'],
            },
        ),
        migrations.CreateModel(
            name='TripWayPointData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('arrival_time', models.DateTimeField(blank=True, null=True)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_module.trip')),
                ('way_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_module.waypoint')),
            ],
            options={
                'verbose_name_plural': 'trip_meta_data',
                'ordering': ['trip'],
            },
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=150, null=True)),
                ('type', models.CharField(blank=True, max_length=150, null=True)),
                ('address_line_one', models.CharField(blank=True, max_length=150, null=True)),
                ('address_line_two', models.CharField(blank=True, max_length=150, null=True)),
                ('active', models.BooleanField(blank=True, default=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=150, null=True)),
                ('last_name', models.CharField(blank=True, max_length=30, null=True)),
                ('contact_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_module.contactperson')),
            ],
            options={
                'verbose_name_plural': 'sectors',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='route',
            name='sector_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_module.sector'),
        ),
        migrations.AddField(
            model_name='route',
            name='start_point_coordinates',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='start_point_coordinates', to='auth_module.coordinates'),
        ),
        migrations.AddField(
            model_name='driver',
            name='sector_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_module.sector'),
        ),
        migrations.AddField(
            model_name='driver',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bus',
            name='sector_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='auth_module.sector'),
        ),
        migrations.AddField(
            model_name='bus',
            name='service_history',
            field=models.ManyToManyField(blank=True, to='auth_module.ServiceHistory'),
        ),
    ]
